# Method 1 using slow and Fast Pointer
def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
    slow = head
    fast = head
    prev = None
    if not head.next:
        return None
    while fast and fast.next:
        prev = slow
        slow = slow.next
        fast = fast.next.next
    prev.next = slow.next
    return head
    
    
# Method 2 using length

def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return None

        ptr = curr = head
        count = 0
        while curr:
            count +=1 
            curr = curr.next
        if count % 2 == 0:
            mid = (count + 1)//2 
        else:
            mid = count//2 
        for i in range(mid):  
            temp = ptr
            ptr = ptr.next
        temp.next = ptr.next
        return head
